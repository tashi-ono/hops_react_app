{"version":3,"sources":["Components/SlideMenu/HamburgerButton.jsx","Components/Header/Header.jsx","Components/SearchBar/SearchBar.jsx","Components/DataContext/DataContext.jsx","Components/HopList/HopList.jsx","Components/Homepage/Homepage.jsx","Components/HopDetails/HopDetails.jsx","Components/About/About.jsx","Components/SlideMenu/SlideMenu.jsx","Components/Footer/Footer.jsx","Components/SortedLists/SortedLists.jsx","App.js","serviceWorker.js","index.js"],"names":["HamburgerButton","props","onClick","clickHandler","className","style","textDecorationLine","color","Header","useState","beerQuote","setBeerQuote","to","src","alt","width","handleSlideMenu","event","SearchBar","hopInput","setHopInput","backgroundColor","onSubmit","preventDefault","onSubmitHomepage","onChange","userInput","target","value","type","placeholder","aria-label","DataContext","createContext","hopsDataUrl","process","DataProvider","allHopsData","setAllHopsData","useEffect","a","fetch","response","json","jsonData","data","makeAPICall","Provider","children","HopList","useContext","displayHopsList","hopsArr","map","hops","key","id","name","Homepage","filteredHops","setFilteredHops","hopName","charAt","toUpperCase","slice","filteredArr","filter","eachHops","includes","length","HopDetails","hopDetails","setHopDetails","country","setCountry","singleHopUrl","match","params","res","makeApiCall","displayCountry","displayName","description","alphaAcidMin","alphaAcidMax","About","SlideMenu","handleCloseMenu","Footer","USList","displayUsHops","foundUsHops","countryOfOrigin","OtherList","displayOtherHops","foundOtherHops","App","slideMenuOpen","setSlideMenuOpen","showSlideMenu","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6ff2c294.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./HamburgerButton.scss\";\n\nconst HamburgerButton = (props) => {\n  return (\n    <button onClick={props.clickHandler} className=\"hamburger-nav\">\n      <div className=\"hamburger-lines\"></div>\n      <div className=\"hamburger-lines\"></div>\n      <div className=\"hamburger-lines\"></div>\n    </button>\n  );\n};\n\nexport default HamburgerButton;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HamburgerButton from \"../SlideMenu/HamburgerButton\";\nimport \"./Header.scss\";\n\nconst style = {\n  textDecorationLine: \"none\",\n  color: \"white\",\n};\n\nconst Header = (props) => {\n  const [beerQuote, setBeerQuote] = useState(false);\n\n  const handleBeerClick = (event) => {\n  setBeerQuote(!beerQuote)\n  };\n\n\n  return (\n    <nav className=\"header-nav-bar\">\n      <Link to=\"/\">\n        <img\n          className=\"hop-cone-img\"\n          src=\"https://res.cloudinary.com/gaseir526-tashiono/image/upload/v1593207548/Hops%20React%20Assets/hop-cone_wio19t.png\"\n          alt=\"hop-cone\"\n          width=\"50px\"\n        />\n      </Link>\n      <HamburgerButton clickHandler={props.handleSlideMenu} />\n\n      <div className=\"hidden-beer-icon\">\n        <img\n          src=\"https://res.cloudinary.com/gaseir526-tashiono/image/upload/v1593237086/Hops%20React%20Assets/beer-icon_vqoyng.png\"\n          alt=\"beer-icon\"\n          width=\"40px\"\n          onClick={handleBeerClick}\n        />\n      </div>\n      <div className={`hidden-beer-quote ${beerQuote? \"visible\" : \"\"}`}>\n        <h5>Beer Makes Us Hoppy</h5>\n      </div>\n      <Link style={style} to=\"/varieties\">\n        <p>All Hops</p>\n      </Link>\n      <Link style={style} to=\"/varieties/us\">\n        <p>US Varieties</p>\n      </Link>\n      <Link style={style} to=\"/varieties/other\">\n        <p>Other Varieties</p>\n      </Link>\n      <Link style={style} to=\"/about\">\n        <p>About</p>\n      </Link>\n      <h2>HOPickin</h2>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport \"./SearchBar.scss\";\n\nconst SearchBar = (props) => {\n  const [hopInput, setHopInput] = useState(\"\");\n\n  // this takes input from UI search bar\n  const handleChange = (event) => {\n    const userInput = event.target.value;\n    setHopInput(userInput);\n  };\n\n  // this takes searchbar input and turns it into a string for use as a homepage prop\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmitHomepage(hopInput);\n    setHopInput(\"\");\n  };\n\n  const style = {\n    backgroundColor: \"rgba(54, 156, 193, 0.4)\",\n  };\n\n  return (\n    <nav className=\"navbar navbar-light\" style={style}>\n      <form onSubmit={handleSubmit} className=\"form-inline\">\n        <input\n          onChange={handleChange}\n          value={hopInput}\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n        <button className=\"btn btn-outline-info my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </nav>\n  );\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect, createContext } from \"react\";\n\nexport const DataContext = createContext();\nconst myApiKey = process.env.REACT_APP_API_KEY;\nconst hopsDataUrl = `https://cors-anywhere.herokuapp.com/https://sandbox-api.brewerydb.com/v2/hops/?key=${myApiKey}`;\n\n// backup fetch call\n// const hopsDataUrl = `https://sandbox-api.brewerydb.com/v2/hops/?key=${myApiKey}`;\n\nexport const DataProvider = (props) => {\n  const [allHopsData, setAllHopsData] = useState([]);\n\n  useEffect(() => {\n    const makeAPICall = async () => {\n      const response = await fetch(hopsDataUrl);\n      const jsonData = await response.json();\n      setAllHopsData(jsonData.data);\n    };\n    makeAPICall();\n  }, []);\n\n  return (\n    <DataContext.Provider value={[allHopsData, setAllHopsData]}>\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../DataContext/DataContext\";\n\nimport \"./HopList.scss\";\n\nconst HopList = (props) => {\n  const [allHopsData] = useContext(DataContext);\n  let displayHopsList = <h2>Loading...</h2>;\n\n  // if props have been passed down as a search input, then render that hop name\n  if (props.hopsArr[0]) {\n    displayHopsList = props.hopsArr.map((hops) => {\n      return (\n        <Link key={hops.id} to={`/hops/${hops.id}`}>\n          <p className=\"hop-name\">{hops.name}</p>\n        </Link>\n      );\n    });\n\n    // otherwise, render the whole hop list\n  } else {\n    displayHopsList = allHopsData.map((hops) => {\n      return (\n        <Link key={hops.id} to={`/hops/${hops.id}`}>\n          <p className=\"hop-name\">{hops.name}</p>\n        </Link>\n      );\n    });\n  }\n\n  return <div className=\"hop-list-container\">{displayHopsList}</div>;\n};\n\nexport default HopList;\n","import React, { useState, useContext } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport HopList from \"../HopList/HopList\";\nimport { DataContext } from \"../DataContext/DataContext\";\nimport \"./Homepage.scss\";\n\nconst Homepage = () => {\n  const [allHopsData] = useContext(DataContext);\n  const [filteredHops, setFilteredHops] = useState(allHopsData);\n\n  // this takes hopInput from the SearchBar component and creates a hop array that matches input\n  const handleSubmitHomepage = (hopInput) => {\n    const hopName = hopInput.charAt(0).toUpperCase() + hopInput.slice(1);\n    const filteredArr = allHopsData.filter((eachHops) =>\n      eachHops.name.includes(hopName)\n    );\n\n    // this conditional sets HopList props to equal the hops in filteredArr, otherwise all hops are rendered\n\n    filteredArr.length\n      ? setFilteredHops(filteredArr)\n      : setFilteredHops(allHopsData);\n    setFilteredHops(filteredArr);\n    // console.log(\"filteredArr\", filteredArr);\n  };\n\n  return (\n    <div className=\"homepage-container\">\n      <div className=\"homepage-pic\">\n        <div className=\"homepage-header-text\">\n          <h1>HOPickin</h1>\n          <h2>Great beer needs great hops</h2>\n        </div>\n      </div>\n      <SearchBar onSubmitHomepage={handleSubmitHomepage} />\n      <HopList hopsArr={filteredHops} />\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./HopDetails.scss\";\n\nconst HopDetails = (props) => {\n  const [hopDetails, setHopDetails] = useState({});\n  const [country, setCountry] = useState(\"n/a\");\n\n  useEffect(() => {\n    const makeApiCall = async () => {\n      const myApiKey = process.env.REACT_APP_API_KEY;\n      const singleHopUrl = `https://cors-anywhere.herokuapp.com/https://sandbox-api.brewerydb.com/v2/hop/${props.match.params.id}/?key=${myApiKey}`;\n\n      //backup fetch call\n      // const singleHopUrl = `https://sandbox-api.brewerydb.com/v2/hop/${props.match.params.id}/?key=${myApiKey}`;\n      const res = await fetch(singleHopUrl);\n      const json = await res.json();\n      setHopDetails(json.data);\n      setCountry(json.data.country);\n    };\n\n    makeApiCall();\n  }, [props]);\n\n  let displayCountry = country ? country.displayName : \"not available\";\n\n  let description = hopDetails.description\n    ? hopDetails.description\n    : \"not available\";\n  return (\n    <div className=\"hop-details\">\n      <h2>{hopDetails.name}</h2>\n      <p>\n        <strong>Country: </strong>\n        {displayCountry}{\" \"}\n      </p>\n      <p>\n        <strong>Description:</strong> <br />\n        {description}{\" \"}\n      </p>\n      <p>\n        <strong>Alpha Acid:</strong> {hopDetails.alphaAcidMin}-\n        {hopDetails.alphaAcidMax}%\n      </p>\n    </div>\n  );\n};\n\nexport default HopDetails;\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about-page\">\n      <h3>Welcome to HOPickin!</h3>\n      <p>\n        We are a one-stop library for all your hop-knowledge needs. <br />\n        Other libraries affiliated to hop farms only provide information for the\n        varieties they grow. <br />\n        HOPickin has all the information you need for your next brew.\n      </p>\n      <p>So get HOPickin and get brewing!</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./SlideMenu.scss\";\n\nconst style = {\n  textDecorationLine: \"none\",\n  color: \"white\",\n};\n\nconst SlideMenu = (props) => {\n  return (\n    <nav className=\"slide-nav-container\" onClick={props.handleCloseMenu}>\n      <Link style={style} to=\"/\">\n        <p>All Hops</p>\n      </Link>\n      <Link style={style} to=\"/varieties/us\">\n        <p>US Varieties</p>\n      </Link>\n      <Link style={style} to=\"/varieties/other\">\n        <p>Other Varieties</p>\n      </Link>\n      <Link style={style} to=\"/about\">\n        <p>About</p>\n      </Link>\n    </nav>\n  );\n};\n\nexport default SlideMenu;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>&copy; Copyright 2020 N.S. Coen</p>\n      <p>\n        Icons by Icons8 | Hop background by Andre Klimke | Courtesy of\n        UnSplash\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataContext } from \"../DataContext/DataContext\";\nimport \"./SortedLists.scss\";\n\nexport const USList = () => {\n  const [allHopsData] = useContext(DataContext);\n\n  let displayUsHops = <h4>Loading...</h4>;\n\n  let foundUsHops = allHopsData.filter(\n    (eachHops) => eachHops.countryOfOrigin === \"US\"\n  );\n\n  if (foundUsHops) {\n    displayUsHops = foundUsHops.map((hops) => {\n      return (\n        <Link key={hops.id} to={`/hops/${hops.id}`}>\n          <p className=\"hop-name\">{hops.name}</p>\n        </Link>\n      );\n    });\n  }\n  return (\n    <div className=\"sorted-list-container\">\n      <h3>US Varieties</h3>\n      {displayUsHops}\n    </div>\n  );\n};\n\nexport const OtherList = () => {\n  const [allHopsData] = useContext(DataContext);\n  // console.log(allHopsData);\n\n  let displayOtherHops = <h4>Loading...</h4>;\n\n  let foundOtherHops = allHopsData.filter(\n    (eachHops) => eachHops.countryOfOrigin !== \"US\"\n  );\n\n  if (foundOtherHops) {\n    displayOtherHops = foundOtherHops.map((hops) => {\n      return (\n        <Link key={hops.id} to={`/hops/${hops.id}`}>\n          <p className=\"hop-name\">{hops.name}</p>\n        </Link>\n      );\n    });\n  }\n  return (\n    <div className=\"sorted-list-container\">\n      <h3>Other Varieties</h3>\n      {displayOtherHops}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./Components/Header/Header\";\nimport Homepage from \"./Components/Homepage/Homepage\";\nimport HopDetails from \"./Components/HopDetails/HopDetails\";\nimport About from \"./Components/About/About\";\nimport SlideMenu from \"./Components/SlideMenu/SlideMenu\";\nimport Footer from \"./Components/Footer/Footer\";\nimport { USList, OtherList } from \"./Components/SortedLists/SortedLists\";\nimport { DataProvider } from \"./Components/DataContext/DataContext\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [slideMenuOpen, setSlideMenuOpen] = useState(false);\n\n  const handleSlideMenu = () => {\n    setSlideMenuOpen(!slideMenuOpen);\n  };\n  const handleCloseMenu = () => {\n    setSlideMenuOpen(false);\n  };\n\n  let showSlideMenu = null;\n  if (slideMenuOpen) {\n    showSlideMenu = <SlideMenu handleCloseMenu={handleCloseMenu} />;\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <DataProvider>\n          <Header handleSlideMenu={handleSlideMenu} />\n          {showSlideMenu}\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/varieties/us\" component={USList} />\n            <Route exact path=\"/varieties/other\" component={OtherList} />\n            <Route exact path=\"/hops/:id\" component={HopDetails} />\n            <Route exact path=\"/about\" component={About} />\n            <Redirect to=\"/\" />\n          </Switch>\n          <Footer />\n        </DataProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import $ from 'jquery';\n// import Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}